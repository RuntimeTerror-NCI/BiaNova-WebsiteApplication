{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dvtie\\\\Documents\\\\github\\\\BiaNova-WebsiteApplication\\\\src\\\\components\\\\Recipe Filter\\\\RecipeFilter.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n\tpadding: 0.8rem 0;\n\tdisplay: flex;\n\tgap: 1rem;\n\talign-items: center;\n`;\nconst LabelHead = styled.label`\n\tfont-weight: 2rem;\n\tfont-size: 1.5rem;\n\tpadding-bottom: 6px;\n`;\n_c = LabelHead;\nconst Input = styled.input`\n\theight: 30px;\n\twidth: 50px;\n\tpadding: 0.5rem;\n`;\n_c2 = Input;\nconst Checkbox = styled.input`\n\tcursor: pointer;\n\twidth: 1rem;\n\theight: 1rem;\n`;\nconst StyledForm = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1rem;\n\tbackground-color: white;\n\twidth: 90%;\n\tmargin: auto;\n\tpadding: 2rem 4rem;\n`;\n_c3 = StyledForm;\nconst CheckboxContainer = styled.div`\n\tdisplay: flex;\n\tgap: 2rem;\n`;\n_c4 = CheckboxContainer;\nconst InputGroup = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tgap: 50px 60px;\n\tjustify-content: center;\n`;\nconst CheckboxItem = styled.div`\n\tdisplay: flex;\n\theight: 2rem;\n\talign-items: center;\n`;\n_c5 = CheckboxItem;\nconst CheckboxGroup = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 5px;\n`;\n_c6 = CheckboxGroup;\nconst CheckboxLabel = styled.label`\n\tpadding-left: 15px;\n\twidth: 8rem;\n`;\n_c7 = CheckboxLabel;\nconst InputLabel = styled.label`\n\twidth: 5rem;\n`;\nconst RecipeFilterStyled = styled.div`\n\tmargin-top: 2rem;\n`;\n_c8 = RecipeFilterStyled;\nconst RadioButton = styled.input`\n\twidth: 1rem;\n\theight: 1rem;\n\tcursor: pointer;\n`;\n\nfunction RecipeFilter(_ref) {\n  _s();\n\n  let {\n    params\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(false);\n\n  function toCapitalCase(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function selectOnlyThis(id) {\n    var myCheckbox = document.getElementsByName('myCheckbox');\n    Array.prototype.forEach.call(myCheckbox, function (el) {\n      el.checked = false;\n    });\n    setIsChecked(...true);\n    id.checked = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(RecipeFilterStyled, {\n    children: /*#__PURE__*/_jsxDEV(StyledForm, {\n      children: /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n        children: /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          children: [' ', /*#__PURE__*/_jsxDEV(LabelHead, {\n            children: \" Diets \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this), Object.values(params.diets).map((diet, i) => /*#__PURE__*/_jsxDEV(CheckboxItem, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"checkbox\",\n              ...(isChecked ? 'checked' : null),\n              name: \"myCheckbox\",\n              checked: isChecked,\n              onChange: () => selectOnlyThis(i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n              htmlFor: `${diet}`,\n              children: toCapitalCase(diet)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 9\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RecipeFilter, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n\n_c9 = RecipeFilter;\nexport default RecipeFilter;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"LabelHead\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"StyledForm\");\n$RefreshReg$(_c4, \"CheckboxContainer\");\n$RefreshReg$(_c5, \"CheckboxItem\");\n$RefreshReg$(_c6, \"CheckboxGroup\");\n$RefreshReg$(_c7, \"CheckboxLabel\");\n$RefreshReg$(_c8, \"RecipeFilterStyled\");\n$RefreshReg$(_c9, \"RecipeFilter\");","map":{"version":3,"names":["styled","useState","useRef","InputContainer","div","LabelHead","label","Input","input","Checkbox","StyledForm","form","CheckboxContainer","InputGroup","CheckboxItem","CheckboxGroup","CheckboxLabel","InputLabel","RecipeFilterStyled","RadioButton","RecipeFilter","params","isChecked","setIsChecked","toCapitalCase","string","charAt","toUpperCase","slice","selectOnlyThis","id","myCheckbox","document","getElementsByName","Array","prototype","forEach","call","el","checked","Object","values","diets","map","diet","i"],"sources":["C:/Users/dvtie/Documents/github/BiaNova-WebsiteApplication/src/components/Recipe Filter/RecipeFilter.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { useState, useRef } from 'react';\r\n\r\nconst InputContainer = styled.div`\r\n\tpadding: 0.8rem 0;\r\n\tdisplay: flex;\r\n\tgap: 1rem;\r\n\talign-items: center;\r\n`;\r\n\r\nconst LabelHead = styled.label`\r\n\tfont-weight: 2rem;\r\n\tfont-size: 1.5rem;\r\n\tpadding-bottom: 6px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\theight: 30px;\r\n\twidth: 50px;\r\n\tpadding: 0.5rem;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n\tcursor: pointer;\r\n\twidth: 1rem;\r\n\theight: 1rem;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tfont-size: 1rem;\r\n\tbackground-color: white;\r\n\twidth: 90%;\r\n\tmargin: auto;\r\n\tpadding: 2rem 4rem;\r\n`;\r\n\r\nconst CheckboxContainer = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 2rem;\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n\tgap: 50px 60px;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst CheckboxItem = styled.div`\r\n\tdisplay: flex;\r\n\theight: 2rem;\r\n\talign-items: center;\r\n`;\r\n\r\nconst CheckboxGroup = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 5px;\r\n`;\r\n\r\nconst CheckboxLabel = styled.label`\r\n\tpadding-left: 15px;\r\n\twidth: 8rem;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n\twidth: 5rem;\r\n`;\r\n\r\nconst RecipeFilterStyled = styled.div`\r\n\tmargin-top: 2rem;\r\n`;\r\n\r\nconst RadioButton = styled.input`\r\n\twidth: 1rem;\r\n\theight: 1rem;\r\n\tcursor: pointer;\r\n`;\r\n\r\nfunction RecipeFilter({ params }) {\r\n\tconst [isChecked, setIsChecked] = useState(false);\r\n\r\n\tfunction toCapitalCase(string) {\r\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\r\n\t}\r\n\r\n\tfunction selectOnlyThis(id) {\r\n\t\tvar myCheckbox = document.getElementsByName('myCheckbox');\r\n\t\tArray.prototype.forEach.call(myCheckbox, function (el) {\r\n\t\t\tel.checked = false;\r\n\t\t});\r\n\t\tsetIsChecked(...true);\r\n\t\tid.checked = true;\r\n\t}\r\n\treturn (\r\n\t\t<RecipeFilterStyled>\r\n\t\t\t<StyledForm>\r\n\t\t\t\t<CheckboxContainer>\r\n\t\t\t\t\t{/* <CheckboxGroup>\r\n\t\t\t\t\t<LabelHead> Intolerances </LabelHead>\r\n\t\t\t\t{params.intolerances.map((intolerance, i) => ( */}\r\n\t\t\t\t\t{/* <CheckboxItem key={i}>\r\n\t\t\t\t\t\t\t\t<Checkbox name='${intolerance}' type='checkbox' />\r\n\t\t\t\t\t\t\t\t<CheckboxLabel htmlFor='${intolerance}'>{toCapitalCase(intolerance)}</CheckboxLabel>\r\n\t\t\t\t\t\t\t</CheckboxItem>\r\n\t\t\t\t\t))}\r\n\t\t \t\t\t</CheckboxGroup> */}\r\n\r\n\t\t\t\t\t<CheckboxGroup>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<LabelHead> Diets </LabelHead>\r\n\t\t\t\t\t\t{Object.values(params.diets).map((diet, i) => (\r\n\t\t\t\t\t\t\t<CheckboxItem key={i}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t{...(isChecked ? 'checked' : null)}\r\n\t\t\t\t\t\t\t\t\tname='myCheckbox'\r\n\t\t\t\t\t\t\t\t\tchecked={isChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={() => selectOnlyThis(i)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<CheckboxLabel htmlFor={`${diet}`}>{toCapitalCase(diet)}</CheckboxLabel>\r\n\t\t\t\t\t\t\t</CheckboxItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</CheckboxGroup>\r\n\t\t\t\t</CheckboxContainer>\r\n\r\n\t\t\t\t{/* <InputGroup>\r\n\t\t\t{Object.keys(params.nutrition).map((nutrition, i) => (\r\n\t\t \t\t\t\t<InputContainer key={i}>\r\n\t\t \t\t\t\t\t<Input type='number' name='${nutrition}' />\r\n\t\t \t\t\t\t\t<InputLabel htmlFor='${nutrition}'> {toCapitalCase(nutrition)}</InputLabel>\r\n\t\t \t\t\t\t</InputContainer>\r\n\t\t \t\t\t))}\r\n\t\t</InputGroup> */}\r\n\t\t\t</StyledForm>\r\n\t\t</RecipeFilterStyled>\r\n\t);\r\n}\r\n\r\nexport default RecipeFilter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}